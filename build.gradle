plugins {
	id 'org.springframework.boot' version '2.6.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: 'jacoco'

group = 'com.meli.challenge'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation group: 'software.amazon.awssdk', name: 'dynamodb-enhanced', version: '2.14.19'

	implementation "org.springdoc:springdoc-openapi-ui:1.5.13"

	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"
}

jacoco {
	toolVersion = "0.8.5"
}

jacocoTestReport {

	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
		xml.destination file("${buildDir}/report.xml")
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: ['com/meli/challenge/mutantchallenge/model/**',
							'com/meli/challenge/mutantchallenge/service/model/dto/**',
							'com/meli/challenge/mutantchallenge/MutantChallengeApplication**'
					])
		}))
	}
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
	finalizedBy jacocoTestReport
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
}
